@page "/update/{Id}"
@using ToDoListBlazor.Models
@using ToDoListBlazor.Services
@inject NavigationManager NavManager
@rendermode InteractiveServer

<h3>Изменить задачу</h3>

<EditForm FormName="ProblemForm" Model="pModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="Title">Title</label>
        <InputText id="Title" @bind-Value="pModel.Title" />
    </div>

    <div>
        <label for="Description">Description</label>
        <InputTextArea id="Description" @bind-Value="pModel.Description" />
    </div>

    <div>
        <label for="Executors">Executors</label>
        <InputText id="Executors" @bind-Value="pModel.Executors" />
    </div>

    <div>
        <label for="Status">Status</label>
        <InputSelect id="Status" @bind-Value="pModel.Status">
            @foreach (ProblemStatus status in Enum.GetValues(typeof(ProblemStatus)))
            {
                if (status != ProblemStatus.CREATED)
                {
                    <option value="@status">@status</option>
                }
            }
        </InputSelect>
    </div>

    <div>
        <label for="PlannedComplexityTime">Planned Complexity Time</label>
        <InputNumber id="PlannedComplexityTime" @bind-Value="pModel.PlannedComplexityTime" />
    </div>

    <div>
        <button type="submit">Update</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string Id { get; set; }

    private Problem pModel = new();
    private ProblemManager pManager = new();

    protected override void OnInitialized()
    {
        pModel = pManager.GetProblemData(int.Parse(Id));
    }

    private void HandleValidSubmit()
    {
        pManager.UpdateProblemDetails(pModel);
    }
}



